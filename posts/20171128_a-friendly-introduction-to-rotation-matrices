Euclidean transformations are frequently utilized in dynamics, robotics, and image processing, to name a few areas. In this post, we'll try to gain an intuition for one type of Euclidean transformation: rotation, which is achieved using rotation matrices. Specifically, we'll examine the simplest case—the 2D rotation matrix.

<img class="alignnone size-large wp-image-216" src="https://nrsyed.com/wp-content/uploads/2017/11/rotation_1-1024x518.png" alt="" width="840" height="425" />

Suppose we're looking at the <i>XY</i> plane (I'll use uppercase letters, like <i>X</i> and <i>Y</i>, to denote axes), and suppose there's a point on the plane a distance <i>a</i> from the origin that makes an angle <i>θ</i> with the <i>X</i> axis—see the figure above. Trigonometry tells us that the <i>x</i> and <i>y</i> coordinates of this point (I'll use lowercase letters, like <i>x</i> and <i>y</i>, to denote coordinates along an axis) are given by <i>x </i>=<i> a</i>cos<i>θ </i>and <i>y </i>=<i> a</i>sin<i><i>θ</i></i>, respectively.

<img class="alignnone size-large wp-image-220" src="https://nrsyed.com/wp-content/uploads/2017/11/rotation_2-1024x517.png" alt="" width="840" height="424" />

Now, referring to the figure above, suppose we have a different point a distance <i>b</i> from the origin that makes the same angle <i>θ</i>, as before, but this time with the <i>Y</i> axis. We can see that the <i>x</i> and <i>y</i> coordinates of this point are given by <i>x = -b</i>sin<i><i>θ</i> </i>and <i>y = b</i>cos<i><i>θ.</i></i>

<img class="alignnone size-large wp-image-221" src="https://nrsyed.com/wp-content/uploads/2017/11/rotation_3-1024x518.png" alt="" width="840" height="425" />

In the figure above, left, we see the two points (and the lines extending toward them from the origin) superimposed on one set of axes. Because they both lie at an angle <i>θ</i> relative to the <i>X</i> and <i>Y </i>axes, respectively, the lines are perpendicular to one another, just like a set of Cartesian axes. If we extend each line in both directions, we can form a new set of axes, which we'll draw in red and call <i>X'</i> and <i>Y' </i>(figure above, right). Notice how this new set of primed axes, <i>X' </i>and <i>Y'</i>, is the same as the <i>X</i> and <i>Y</i> axes (both sets of axes share an origin), but they're rotated counterclockwise by angle <i>θ.</i>

The purpose of coordinate rotations is, essentially, to express coordinates from one coordinate system in a different coordinate system. When might this be useful? Say, for example, you have a range sensor on a car that detects obstacles near the car by reporting their location relative to the sensor, but the sensor is mounted at an angle—in other words, the sensor's <i>X</i> and <i>Y</i> axes are at some angle relative to the car's <i>X</i> and <i>Y</i> axes. In that case, we might utilize a coordinate transformation to put the sensor feedback in terms of the vehicle coordinate system. Or, as another example, say we have a robot arm with three joints, where each joint is rotated by a stepper motor. We know the length of each segment and the angular displacement of each motor, but not the overall orientation of the robot arm or the position of the manipulator or gripper at the end of the arm. In this case, we might be working with four coordinate systems—one for each joint, and a global coordinate system (i.e., the one we're in, which physically describes the orientation of the robot arm in space). In this example, we might use several sequential coordinate rotations to determine the configuration of the robot arm, or to determine how to move the manipulator/gripper to a specific location.

Along those lines, let's say we're looking at some point that's defined in the <i>X'Y'</i> coordinate system:

<img class="alignnone size-large wp-image-224" src="https://nrsyed.com/wp-content/uploads/2017/11/rotation_4-1024x517.png" alt="" width="840" height="424" />

In the <i>X'Y'</i> coordinate system, the point has coordinates (<i>x'</i>, <i>y'</i>)—see the figure above, right. Note how I've indicated the <i>x'</i> coordinate of the point with a white dot on the <i>X'</i> axis and the <i>y'</i> coordinate of the point with a white dot on the <i>Y'</i> axis. However, let's say we're not interested in the coordinates of this point in the <i>X'Y'</i> coordinate system. Instead, we'd like the coordinates of the point in terms of the <i>XY</i> axes from earlier:

<img class="alignnone size-large wp-image-225" src="https://nrsyed.com/wp-content/uploads/2017/11/rotation_5-1024x518.png" alt="" width="840" height="425" />

The figure above on the right is analogous to the first several figures where we drew one point a distance <i>a</i> from the origin and another point a distance <i>b</i> from the origin. Here, <i>a</i> corresponds to the <i>x'</i> coordinate of the point along the <i>X'</i> axis, and <i>b</i> corresponds to the <i>y'</i> coordinate of the point along the <i>Y'</i> axis. Then, by analogy, we can say that the <i>x</i> and <i>y</i> coordinates of the <i>x'</i> component of the point are given by:

<i>x</i> =<i> x'</i>cos<i>θ</i>

<i>y </i>=<i> x'</i>sin<i><i>θ</i></i>

Similarly, the <i>x </i>and <i>y</i> coordinates of the <i>y' </i>component are given by:

<i>x </i>= <i>-y'</i>sin<i>θ</i>

<i>y </i>=<i> y'</i>cos<i>θ</i>

All we've done here is separate the point, which is defined in the <i>X'Y'</i> system, into its <i>x' </i>and <i>y'</i> components. Then, we expressed the <i>x'</i> component in terms of <i>x</i> and <i>y</i>, and we expressed the <i>y' </i>component in terms of <i>x</i> and <i>y</i> (since our goal is to obtain the <i>x</i> and <i>y</i> coordinates of the point). The overall coordinates of a point are given by the sum of its components; if you're familiar with vectors, this is akin to saying that the coordinates of a point can be found by adding together its components. In this case, the coordinates of the point are found by adding together its <i>x'</i> and <i>y'</i> components, i.e., <i>x' </i>+ <i>y' </i>= (x'cosθ, <i>x'</i>sin<i>θ</i>) + (<i>-y'</i>sin<i>θ, y'</i>cos<i>θ</i>), or:

<i>x </i>=<i> x'</i>cos<i>θ - </i><i>y'</i>sin<i>θ</i>

<i>y </i>=<i> x'</i>sin<i>θ </i>+ <i>y'</i>cos<i>θ</i>

These, finally, are the coordinates of the point in the <i>XY</i> coordinate system. How does all of this tie into rotation matrices? A rotation matrix is what relates the (<i>x'</i>, <i>y'</i>) coordinates to the (<i>x</i>, <i>y</i>) coordinates. It takes the expressions for <i>x</i> and <i>y</i> above and allows us to put them into matrix form, like so:

[latex]
\left\{ \begin{matrix} x \\ y \end{matrix} \right\} =
\left[ \begin{matrix} cos\theta &amp; -sin\theta \\
sin\theta &amp; cos\theta \end{matrix} \right]
\left\{ \begin{matrix} x' \\ y' \end{matrix} \right\}
[/latex]
<br>
Basically, the rotation matrix asks (and answers) the question, "What does the <i>x'</i> component contribute to <i>x</i> and what does the <i>y'</i> component contribute to <i>x</i>? What does the <i>x'</i> component contribute to <i>y</i> and what does the <i>y'</i> component contribute to <i>y</i>?" The end result is the coordinates of the point in the <i>XY</i> coordinate system:

<img class="alignnone size-full wp-image-228" src="https://nrsyed.com/wp-content/uploads/2017/11/rotation_6.png" alt="" width="425" height="425" />

What if we want to go the other direction, i.e., convert the coordinates from a point in the <i>XY</i> coordinate system to the <i>X'Y'</i> coordinate system? This turns out to be the transpose of the matrix above. If it's not apparent why this is the case, try applying the approach we employed in this post to go the other way and see how it works out.

In the next post, we'll discuss Euclidean transformation matrices that combine rotation and translation.
